// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NextGenSoftware.OASIS.API.Providers.SQLLiteDBOASIS.Persistence.Context;

#nullable disable

namespace NextGenSoftware.OASIS.API.Providers.SQLLiteDBOASIS.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("NextGenSoftware.OASIS.API.Providers.SQLLiteDBOASIS.Entities.AvatarDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HolonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image2D")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChanged")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Karma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Landline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentCelestialBodyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentCelestialSpaceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentDimensionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGalaxyClusterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGalaxyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGrandSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGreatGrandSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentHolonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentMoonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentMultiverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentOmniverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentPlanetId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentSolarSystemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentUniverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentZomeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PreviousVersionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UmaJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AvatarDetailEntities");
                });

            modelBuilder.Entity("NextGenSoftware.OASIS.API.Providers.SQLLiteDBOASIS.Entities.AvatarEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HolonId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBeamedIn")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChanged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JwtToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastBeamedIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastBeamedOut")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PreviousVersionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResetToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AvatarEntities");
                });

            modelBuilder.Entity("NextGenSoftware.OASIS.API.Providers.SQLLiteDBOASIS.Entities.HolonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HolonId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsChanged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedByAvatarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentCelestialBodyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentCelestialSpaceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentDimensionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGalaxyClusterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGalaxyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGrandSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentGreatGrandSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentHolonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentMoonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentMultiverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentOmniverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentPlanetId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentSolarSystemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentSuperStarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentUniverseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParentZomeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PreviousVersionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HolonEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
